syntax = "proto3";

package raftKVRpcProtoc; //所在的命名空间

option cc_generic_services = true;  //开启stub服务

// 客户端发送的获取数据请求，包含要查询的键、客户端ID和请求ID。
message GetArgs{
  bytes Key = 1 ;         // 要获取的键
  bytes ClientId = 2 ;    // 客户端唯一标识
  int32 RequestId = 3;    // 请求ID，用于去重
}

// 服务器对Get请求的响应，包含错误信息（如果有）和查询结果。
message GetReply  {
  bytes Err = 1;          // 错误信息，成功时为空
  bytes Value = 2;        // 查询到的值
}

// 客户端发送的写操作请求，支持两种操作类型
message PutAppendArgs  {
  bytes Key = 1;          // 键
  bytes Value = 2 ;       // 值
  bytes Op = 3;           // 操作类型："Put"或"Append",Put：设置键的值,Append：在键的现有值后追加内容包含防重复请求机制（ClientId+RequestId）。
  bytes ClientId = 4;     // 客户端唯一标识
  int32 RequestId = 5;    // 请求ID，用于去重
}

// 服务器对Put/Append请求的响应，仅包含错误信息。
message PutAppendReply  {
  bytes Err = 1;          // 错误信息，成功时为空
}

// 定义了KV服务器提供的两个RPC服务方法
service kvServerRpc {
  rpc PutAppend(PutAppendArgs) returns(PutAppendReply);  // 写操作接口,处理添加或追加键值对的请求
  rpc Get(GetArgs) returns (GetReply);                   // 读操作接口,处理获取键值对的请求
}